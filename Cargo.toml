[package]
name = "mqtt3"
version = "0.1.0"
authors = ["Azure IoT Edge Devs"]
license = "MIT"
edition = "2018"

[dependencies]
bytes = { version = "1", default-features = false }

futures-core = { version = "0.3", optional = true, default-features = false }
futures-channel = { version = "0.3", optional = true, default-features = false, features = [
	"sink", # for futures_channel::mpsc::Sender: futures_sink::Sink
	"std", # for futures_channel::mpsc
] }
futures-sink = { version = "0.3", optional = true, default-features = false }
futures-util = { version = "0.3", optional = true, default-features = false, features = [
	"sink",
] }
log = { version = "0.4", optional = true, default-features = false }
pin-project = { version = "1", optional = true, default-features = false }
smol = { version = "1", optional = true, default-features = false }
tokio = { version = "1", optional = true, default-features = false }

[dev-dependencies]
env_logger = { version = "0.8", default-features = false, features = ["atty", "humantime", "termcolor"] }
structopt = { version = "0.3", default-features = false }
tokio = { version = "1", default-features = false, features = ["macros", "net", "rt", "rt-multi-thread", "signal"] }

[patch.crates-io]
async-net = { git = "https://github.com/smol-rs/async-net", rev = "fcef0a09692d03e8478fb638e7fa666d3a104e5d" }

[features]
client = [
	"futures-channel",
	"tokio/time",
	"_common",
]
server = [
	"futures-util/std", # for futures_util::stream::FuturesUnordered
	"_common",
]
transport-smol = [
	"smol",
]
transport-tokio = [
	"tokio",
	"tokio/net",
]
_common = [
	"futures-core",
	"futures-sink",
	"futures-util",
	"log",
	"pin-project",
]

[[example]]
name = "publisher"
required-features = ["client"]

[[example]]
name = "server"
required-features = ["server"]

[[example]]
name = "subscriber"
required-features = ["client"]

[[example]]
name = "will"
required-features = ["client"]

[profile.release]
codegen-units = 1
debug = true
incremental = false
lto = true
opt-level = 3
panic = "abort"
